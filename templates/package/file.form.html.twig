{#
 # -------------------------------------------------------------------------
 # Deploy plugin for GLPI
 # -------------------------------------------------------------------------
 #
 # LICENSE
 #
 # This file is part of Deploy.
 #
 # Deploy is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 3 of the License, or
 # (at your option) any later version.
 #
 # Deploy is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Deploy. If not, see <http://www.gnu.org/licenses/>.
 # -------------------------------------------------------------------------
 # @copyright Copyright (C) 2022-2024 by Deploy plugin team.
 # @license   GPLv3 https://www.gnu.org/licenses/gpl-3.0.html
 # @link      https://github.com/pluginsGLPI/deploy
 # -------------------------------------------------------------------------
 #}

{% import 'components/form/fields_macros.html.twig' as fields %}

<div class="modal-body">
    {% if not is_edit %}
        {{ fields.dropdownArrayField(
            'upload_mode',
            '',
            {
                '': '-----',
                'from_computer': __("Upload from your computer", 'deploy'),
                'from_server': __("Upload from the server", 'deploy')
            },
            __('Upload mode') ~ '<i class="ms-2 ti ti-upload"></i>',
            field_options
        ) }}
    {% endif %}

    <div id="file_options" class="{{ is_edit ? "" : "d-none" }}">
        {% if not is_edit %}
            <div id="from_computer" class="d-none">
                {% set upload_field %}
                    <input class="form-control" type="file" id="file_input" name="file">
                {% endset %}
                {{ fields.field(
                    'file',
                    upload_field,
                    __('File') ~ '<i class="ms-2 ti ti-file"></i>',
                    field_options|merge({
                        'id': 'file_input',
                    })
                ) }}
            </div>

            <div id="from_server" class="d-none">
                {% set fancytree_html %}
                    <input type="text" id="server_file_input" class="form-control" name="server_file">
                    <div id="server_files_tree">
                        {{ call('GlpiPlugin\\Deploy\\PackageFile::getFilesTreeFromServer')|raw }}
                    </div>
                {% endset %}
                {{ fields.field(
                    'server_file',
                    fancytree_html,
                    __('File') ~ '<i class="ms-2 ti ti-file"></i>',
                    field_options|merge({
                        'id': 'server_file_input',
                        'add_field_html': '<span class="form-help" data-bs-toggle="popover" data-bs-placement="top" data-bs-html="true" data-bs-content="
    ' ~ __("Upload your files to %s folder")|replace({'%s': constant("GLPI_UPLOAD_DIR")}) ~ '
    ">?</span>',
                    })
                ) }}
            </div>
        {% else %}
            {{ fields.readOnlyField(
                'filename',
                subitem_instance.fields['filename'],
                __('File') ~ '<i class="ms-2 ti ti-file"></i>',
                field_options
            ) }}
            {{ fields.field(
                'filename',
                '<span class="text-muted d-inline-block text-truncate" style="width: 100%" title="' ~ subitem_instance.fields['sha512'] ~ '">' ~ subitem_instance.fields['sha512'] ~ '</span>',
                '<i class="ms-2 ti ti-fingerprint"></i>',
                field_options
            ) }}
        {% endif %}

    </div>
</div>
<div id="file_more_options" class="modal-body mt-n3 bg-blue-lt {{ is_edit ? "" : "d-none" }}">

        {% set p2p_field %}
            {{ fields.checkboxField(
                'p2p',
                subitem_instance.fields['p2p'],
                '',
                {
                    'label_class': 'pt-0',
                    'input_class': 'col-xxl-12',
                }
            ) }}

            {{ fields.numberField(
                'p2p_retention_days',
                subitem_instance.fields['p2p_retention_days'],
                __('Retention days', 'deploy') ~ '<i class="ms-2 ti ti-calendar-time"></i>',
                {
                    'label_class': 'col-xxl-8',
                    'input_class': 'col-xxl-4',
                }
            ) }}
        {% endset %}

        {{ fields.field(
            '',
            p2p_field,
            __("P2P", 'deploy') ~ '<i class="ms-2 ti ti-affiliate"></i>',
            field_options|merge({
                input_class: 'col-xxl-9 d-flex align-items-start',
            })
        ) }}

        {{ fields.checkboxField(
            'uncompress',
            subitem_instance.fields['uncompress'],
            __('Uncompress', 'deploy') ~ '<i class="ms-2 ti ti-file-zip"></i>',
            field_options
        ) }}
    </div>
</div>

<script type="text/javascript">
$(document).ready(function() {
    {% if not is_edit %}
        $('.modal-footer').addClass('d-none');
    {% endif %}
    $('#dropdown_upload_mode{{ rand }}').on('select2:select', function() {
        $('#file_options, #file_more_options, #from_computer, #from_server, .modal-footer').addClass('d-none');

        var mode = $(this).val();
        if (mode.length > 0) {
            $('#file_options, #file_more_options, .modal-footer').removeClass('d-none');
            if (mode == 'from_computer') {
                $('#from_computer').removeClass('d-none');
            }
            if (mode == 'from_server') {
                $('#from_server').removeClass('d-none');
            }
        }
    });

    $('#server_files_tree').fancytree({
        // load plugins
        extensions: ['glyph'],

        // enable font-awesome icons
        glyph: {
            preset: "awesome5",
            map: {}
        },

        // copy path on node click
        activate: function(event, data) {
            $('#server_file_input').val((data.node.data.path ?? ""));
        },
    });
});
</script>
