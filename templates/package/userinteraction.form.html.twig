{% import 'components/form/fields_macros.html.twig' as fields %}

{% set no_header = no_header|default(not item.isNewItem() and not _get._in_modal|default(false)) %}
{% set bg = '' %}
{% if item.isDeleted() %}
   {% set bg = 'asset-deleted' %}
{% endif %}

<div class="asset {{ bg }}">
    {{ include('components/form/header.html.twig', {'in_twig': true}) }}

        {# based field 'name' #}
        <div class="form-field row align-items-center col-12 col-sm-6  mb-2">
            <label class="col-form-label col-xxl-2 text-xxl-end" for="name">
                {{ __('Name') }}
            </label>
            <div class="col-xxl-7 field-container">
                <input type="text" id="name" class="form-control " name="name" value="{{ item.fields['name'] }}">
            </div>
        </div>

        {# hr text #}
        <div class="d-flex align-items-center justify-content-center">
            <div class="w-30 p-3">
                <div class="hr-text">
                    <i class="ti ti-settings"></i>
                    <span>{{ __('User interaction') }}</span>
                </div>
            </div>
            <div class="w-30 p-3">
                <div class="hr-text">
                    <i class="ti ti-presentation"></i>
                    <span>{{ __('preview') }}</span>
                </div>
            </div>
            <div class="w-30 p-3">
                <div class="hr-text">
                    <i class="ti ti-settings"></i>
                    <span>{{ __('behavior') }}</span>
                </div>
            </div>
        </div>


        <div class="d-flex align-items-center justify-content-center">
            {# Config #}
            <div class="w-30 p-3">
                {% set field_option = {
                    full_width: true,
                } %}

                {{ fields.dropdownArrayField(
                    'retry_job_after',
                    item.fields['retry_job_after'],
                    call("GlpiPlugin\\Deploy\\UserInteraction::getTime", [true]),
                    __('Retry job after', 'deploy'),
                    field_option
                )}}
                {{ fields.nullField() }}

                {{ fields.dropdownNumberField(
                'nb_max_retry',
                item.fields['nb_max_retry'],
                __('Maximum number of retry allowed', 'deploy'),
                {
                    'min'      : 1,
                    'max'      : 20,
                    'step'     : 1,
                }|merge(field_option)
                ) }}
                {{ fields.nullField() }}

                {{ fields.dropdownArrayField(
                    'timeout',
                    item.fields['timeout'],
                    call("GlpiPlugin\\Deploy\\UserInteraction::getTime", [false]),
                    __('Alert display timeout', 'deploy'),
                    field_option
                )}}
                {{ fields.nullField() }}
            </div>

            {# Preview #}
            <div class="w-30 p-3">
                <div class="modal-dialog preview">
                    <div class="modal-content-deploy">
                        <div class="modal-header-deploy">
                            <input type="text" placeholder="Give a title" name="title" class="form-control tox-textfield title-editable"  value="{{ item.fields['title'] }}">
                        </div>
                        <div class="d-flex modal-body-deploy">
                            <div class="me-2">
                                <select class="dropdown-editable" data-show-content="true" id="icon" name="icon">
                                    {% for icon_key, icon in call("GlpiPlugin\\Deploy\\UserInteraction::getIcons", [true,false]) %}
                                        <option value="{{ icon_key }}" {{ item.fields['icon'] == icon_key ? "selected" : "" }}>
                                            {{ icon }}
                                        </option>
                                    {% endfor %}
                                </select>
                            </div>
                            <textarea placeholder="Give a descrption" name="text" class="tox-textfield textarea-editable" rows="6" cols="50">{{ item.fields['text'] }}</textarea>
                        </div>
                        <div class="modal-footer-deploy">
                            <select class="dropdown-editable" data-show-content="true" id="interaction_type" name="interaction_type">
                                {% for interaction_type_key, interaction_type in call("GlpiPlugin\\Deploy\\UserInteraction::getInteractionTypesIcon") %}
                                    <option value="{{ interaction_type_key }}" {{ item.fields['interaction_type'] == interaction_type_key ? "selected" : "" }}>
                                        {{ interaction_type }}
                                    </option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            {# Behaviors #}
            <div class="w-30 p-3">

            </div>
        </div>
    </div>

    {% if item_type == 'Contract' %}
        {{ include('components/form/support_hours.html.twig') }}
    {% endif %}
    {% if no_form_buttons is not defined or no_form_buttons == false %}
        {{ include('components/form/buttons.html.twig') }}
    {% endif %}
    {% if no_inventory_footer is not defined or no_inventory_footer == false %}
        {{ include('components/form/inventory_info.html.twig') }}
    {% endif %}
    {% if params['formfooter'] is null or params['formfooter'] == true %}
        <div class="card-footer mx-n2 mb-n2 mt-4">
            {{ include('components/form/dates.html.twig') }}
        </div>
    {% endif %}
</div>

<script type="text/javascript">
    $(document).ready(function() {
        function formatIcon (state) {
            if (!state.id) { return state.text; }
            return '<i class="fa fa-lg '+state.id.toLowerCase()+'"></i> '+state.text;
        }

        $("#icon").select2({
            formatResult: formatIcon,
            formatSelection: formatIcon,
            width : 60, //define width
            minimumResultsForSearch: -1, //no search
            escapeMarkup: function(m) { return m; }
        });


        function formatInteractiontype (state) {
            return interaction.text;
        }

        $("#interaction_type").select2({
            formatResult: formatInteractiontype,
            formatSelection: formatInteractiontype,
            width : '100%', //define width
            minimumResultsForSearch: -1, //no search
            escapeMarkup: function(m) { return m; }
        });
    });
</script>
