{#
 # -------------------------------------------------------------------------
 # Deploy plugin for GLPI
 # -------------------------------------------------------------------------
 #
 # LICENSE
 #
 # This file is part of Deploy.
 #
 # Deploy is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
 # the Free Software Foundation; either version 3 of the License, or
 # (at your option) any later version.
 #
 # Deploy is distributed in the hope that it will be useful,
 # but WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
 # along with Deploy. If not, see <http://www.gnu.org/licenses/>.
 # -------------------------------------------------------------------------
 # @copyright Copyright (C) 2022-2024 by Deploy plugin team.
 # @license   GPLv3 https://www.gnu.org/licenses/gpl-3.0.html
 # @link      https://github.com/pluginsGLPI/deploy
 # -------------------------------------------------------------------------
 #}

{% import 'components/form/fields_macros.html.twig' as fields %}

<div class="modal-body">
  <div class="row">
    <div class="col-md">
        {{ fields.textField(
            'name',
            subitem_instance.fields['name'],
            __("Label", 'deploy') ~ '<i class="ms-2 ti ti-tag"></i>',
            field_options|merge({
                mb: 'mb-4',
            })
        ) }}

        {{ fields.textField(
            'title',
            subitem_instance.fields['title'],
            __("Title", 'deploy') ~ '<i class="ms-2 ti ti-tag"></i>',
            field_options
        ) }}

        {{ fields.textareaField(
            'text',
            subitem_instance.fields['text']|join("\n"),
            __("Text", 'deploy') ~ '<i class="ms-2 action-icon-type ti ti-blockquote"></i>',
            field_options
        ) }}

        {{ fields.dropdownField(
            "GlpiPlugin\\Deploy\\UserInteractionTemplate",
            'alerttemplate_id',
            '',
            __('Alert Template', 'deploy') ~ '<i class="ms-2 ti ti-template"></i>',
            field_options|merge({ 'on_change': 'updateAlertTemplate' ~ rand ~ '(this.value);' })
        ) }}

        {% set type_list = { "": "--" } | merge(call("GlpiPlugin\\Deploy\\Package_UserInteraction::getTypes")) %}

        {{ fields.dropdownArrayField(
            'type',
            subitem_instance.fields['type'],
            type_list,
            __("Type", 'deploy') ~ '<i class="ms-2 ' ~ call("GlpiPlugin\\Deploy\\Package_UserInteraction::getIcon") ~ '"></i>',
            field_options|merge({ 'rand': rand })
        ) }}

        {% set interaction_type_list = { "": "--" } | merge(call("GlpiPlugin\\Deploy\\Package_UserInteraction::getInteractionTypes")) %}

        {{ fields.dropdownArrayField(
            'interaction_type',
            subitem_instance.fields['interaction_type'],
            interaction_type_list,
            __("Interaction type", 'deploy') ~ '<i class="ms-2 ' ~ call("GlpiPlugin\\Deploy\\Package_UserInteraction::getIcon") ~ '"></i>',
            field_options|merge({ 'rand': rand })
        ) }}

        {{ fields.dropdownArrayField(
            'icon',
            subitem_instance.fields['icon'],
            call("GlpiPlugin\\Deploy\\Package_UserInteraction::getIcons"),
            __("Icon", 'deploy') ~ '<i class="ms-2 ti ti-flag"></i>',
            field_options|merge({ 'rand': rand })
        ) }}
    </div>
    <div class="col-sm">
        <h2>{{ __('Preview alert', 'deploy') }}</h2>
        <div id="preview">
        </div>
    </div>
  </div>
</div>

<script type="text/javascript">
    function updateAlertTemplate{{ rand }}(value) {
        $.ajax({
            url: CFG_GLPI.root_doc + '/' + GLPI_PLUGINS_PATH.deploy + '/ajax/userInteractionTemplate.php',
            type: 'POST',
            data: {
            alerttemplate_id: value,
            }
        }).done(function (data) {
            var data = JSON.parse(data);
            if (data.icon !== undefined) {
                // Set icon
                $("#dropdown_icon{{ rand }}").val(data.icon).trigger('change');
            }

            if (data.interaction_type !== undefined) {
                // Set interaction type
                $("#dropdown_interaction_type{{ rand }}").val(data.interaction_type).trigger('change');
            }

            if (data.alert_type !== undefined) {
                // Set alert type
                $("#dropdown_type{{ rand }}").val(data.alert_type).trigger('change');
            }
        });
    };

    $(document).ready(function() {
        $('#dropdown_type{{ rand }}').on('change', function() {
            $('.specificfields, .modal-footer').addClass('d-none');
            var actiontype = $(this).val();
            if (actiontype != "") {
                $('.modal-footer').removeClass('d-none');
            }
        });

        function updatePreview() {
            var ajax_url = CFG_GLPI.root_doc + '/' + GLPI_PLUGINS_PATH.deploy + '/ajax/userInteraction.php';
            var data = $('#modal_userinteraction').find('form:first').serializeArray().reduce(
                function(obj, item) {
                    obj[item.name] = item.value;
                    return obj;
                },
                {}
            );

            $.ajax({
                url: ajax_url,
                method: "GET",
                data: data,
            success:function(response) {
                $('#preview').html(response);
            },
            error:function(){
                alert("error");
            }
        });
        };

        $('#modal_userinteraction').find('form:first').on('keyup change paste', 'input, select, textarea', function(){
            updatePreview();
        });

        updatePreview();
    });
</script>
